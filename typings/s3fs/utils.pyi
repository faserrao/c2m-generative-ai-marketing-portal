"""
This type stub file was generated by pyright.
"""

from contextlib import contextmanager

logger = ...
@contextmanager
def ignoring(*exceptions):
    ...

class S3BucketRegionCache:
    def __init__(self, session, **client_kwargs) -> None:
        ...
    
    async def get_bucket_client(self, bucket_name=...):
        ...
    
    async def get_client(self):
        ...
    
    async def clear(self):
        ...
    
    async def __aenter__(self):
        ...
    
    async def __aexit__(self, *exc_args):
        ...
    


class FileExpired(IOError):
    """
    Is raised, when the file content has been changed from a different process after
    opening the file. Reading the file would lead to invalid or inconsistent output.
    This can also be triggered by outdated file-information inside the directory cache.
    In this case ``S3FileSystem.invalidate_cache`` can be used to force an update of
    the file-information when opening the file.
    """
    def __init__(self, filename: str, e_tag: str) -> None:
        ...
    


def title_case(string):
    """
    TitleCases a given string.

    Parameters
    ----------
    string : underscore separated string
    """
    ...

class ParamKwargsHelper:
    """
    Utility class to help extract the subset of keys that an s3 method is
    actually using

    Parameters
    ----------
    s3 : boto S3FileSystem
    """
    _kwarg_cache = ...
    def __init__(self, s3) -> None:
        ...
    
    def filter_dict(self, method_name, d):
        ...
    


class SSEParams:
    def __init__(self, server_side_encryption=..., sse_customer_algorithm=..., sse_customer_key=..., sse_kms_key_id=...) -> None:
        ...
    
    def to_kwargs(self):
        ...
    


