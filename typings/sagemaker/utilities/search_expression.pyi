"""
This type stub file was generated by pyright.
"""

from enum import Enum, unique
from sagemaker.apiutils._base_types import ApiObject

"""Simplify Search Expression by provide a simplified DSL"""
@unique
class Operator(Enum):
    """Search operators"""
    EQUALS = ...
    NOT_EQUALS = ...
    GREATER_THAN = ...
    GREATER_THAN_OR_EQUAL = ...
    LESS_THAN = ...
    LESS_THAN_OR_EQUAL = ...
    CONTAINS = ...
    EXISTS = ...
    NOT_EXISTS = ...


@unique
class BooleanOperator(Enum):
    """Boolean search operation enum"""
    AND = ...
    OR = ...


class SearchObject(ApiObject):
    """Search Object"""
    def to_boto(self):
        """Convert a search object to boto"""
        ...
    


class Filter(SearchObject):
    """A Python class represent a Search Filter object."""
    name = ...
    operator = ...
    value = ...
    def __init__(self, name, operator=..., value=..., **kwargs) -> None:
        """Construct a Filter object

        Args:
            name (str): filter field name
            operator (Operator): one of Operator enum
            value (str): value of the field
        """
        ...
    


class NestedFilter(SearchObject):
    """A Python class represent a Nested Filter object."""
    nested_property_name = ...
    filters = ...
    def __init__(self, property_name, filters, **kwargs) -> None:
        """Construct a Nested Filter object

        Args:
            property_name (str): nested property name
            filters (List[Filter]): list of Filter objects
        """
        ...
    


class SearchExpression(SearchObject):
    """A Python class representation of a Search Expression object.

    A sample search expression defined in here:
    https://boto3.amazonaws.com/v1/documentation/api/1.12.8/reference/services/sagemaker.html#SageMaker.Client.search
    """
    filters = ...
    nested_filters = ...
    operator = ...
    sub_expressions = ...
    def __init__(self, filters=..., nested_filters=..., sub_expressions=..., boolean_operator=..., **kwargs) -> None:
        """Construct a Search Expression object

        Args:
            filters (List[Filter]): list of Filter objects
            nested_filters (List[NestedFilter]): list of Nested Filters objects
            sub_expressions (List[SearchExpression]): list of Search Expression objects
            boolean_operator (BooleanOperator): one of the boolean operator enums
        """
        ...
    


