"""
This type stub file was generated by pyright.
"""

from abc import abstractmethod

"""
This type stub file was generated by pyright.
"""
class _Job:
    """Handle creating, starting and waiting for Amazon SageMaker jobs to finish.

    This class shouldn't be directly instantiated.

    Subclasses must define a way to create, start and wait for an Amazon
    SageMaker job.
    """
    def __init__(self, sagemaker_session, job_name) -> None:
        """Placeholder docstring"""
        ...
    
    @abstractmethod
    def start_new(self, estimator, inputs):
        """Create a new Amazon SageMaker job from the estimator.

        Args:
            estimator (sagemaker.estimator.EstimatorBase): Estimator object
                created by the user.
            inputs (str): Parameters used when called
                :meth:`~sagemaker.estimator.EstimatorBase.fit`.

        Returns:
            sagemaker.job: Constructed object that captures all information
            about the started job.
        """
        ...
    
    @abstractmethod
    def wait(self):
        """Wait for the Amazon SageMaker job to finish."""
        ...
    
    @abstractmethod
    def describe(self):
        """Describe the job."""
        ...
    
    @abstractmethod
    def stop(self):
        """Stop the job."""
        ...
    
    @property
    def name(self):
        """Placeholder docstring"""
        ...
    


