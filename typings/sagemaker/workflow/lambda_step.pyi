"""
This type stub file was generated by pyright.
"""

import attr
from typing import Dict, List, Optional, Union
from enum import Enum
from sagemaker.workflow.entities import DefaultEnumMeta, RequestType
from sagemaker.workflow.step_collections import StepCollection
from sagemaker.workflow.steps import CacheConfig, Step
from sagemaker.lambda_helper import Lambda

"""The step definitions for workflow."""
class LambdaOutputTypeEnum(Enum, metaclass=DefaultEnumMeta):
    """LambdaOutput type enum."""
    String = ...
    Integer = ...
    Boolean = ...
    Float = ...


@attr.s
class LambdaOutput:
    """Output for a lambdaback step.

    Attributes:
        output_name (str): The output name
        output_type (LambdaOutputTypeEnum): The output type
    """
    output_name: str = ...
    output_type: LambdaOutputTypeEnum = ...
    def to_request(self) -> RequestType:
        """Get the request structure for workflow service calls."""
        ...
    
    def expr(self, step_name) -> Dict[str, str]:
        """The 'Get' expression dict for a `LambdaOutput`."""
        ...
    


class LambdaStep(Step):
    """Lambda step for workflow."""
    def __init__(self, name: str, lambda_func: Lambda, display_name: str = ..., description: str = ..., inputs: dict = ..., outputs: List[LambdaOutput] = ..., cache_config: CacheConfig = ..., depends_on: Optional[List[Union[str, Step, StepCollection]]] = ...) -> None:
        """Constructs a LambdaStep.

        Args:
            name (str): The name of the lambda step.
            display_name (str): The display name of the Lambda step.
            description (str): The description of the Lambda step.
            lambda_func (str): An instance of sagemaker.lambda_helper.Lambda.
                If lambda arn is specified in the instance, LambdaStep just invokes the function,
                else lambda function will be created while creating the pipeline.
            inputs (dict): Input arguments that will be provided
                to the lambda function.
            outputs (List[LambdaOutput]): List of outputs from the lambda function.
            cache_config (CacheConfig):  A `sagemaker.workflow.steps.CacheConfig` instance.
            depends_on (List[Union[str, Step, StepCollection]]): A list of `Step`/`StepCollection`
                names or `Step` instances or `StepCollection` instances that this `LambdaStep`
                depends on.
        """
        ...
    
    @property
    def arguments(self) -> RequestType:
        """The arguments dict that is used to define the lambda step."""
        ...
    
    @property
    def properties(self):
        """A Properties object representing the output parameters of the lambda step."""
        ...
    
    def to_request(self) -> RequestType:
        """Updates the dictionary with cache configuration."""
        ...
    


