"""
This type stub file was generated by pyright.
"""

import attr
from typing import List, Union
from sagemaker.workflow.entities import PipelineVariable
from sagemaker.workflow.properties import PropertyFile

"""
This type stub file was generated by pyright.
"""
@attr.s
class Join(PipelineVariable):
    """Join together properties.

    Examples:
    Build a Amazon S3 Uri with bucket name parameter and pipeline execution Id and use it
    as training input::

        bucket = ParameterString('bucket', default_value='my-bucket')

        TrainingInput(
            s3_data=Join(
                on='/',
                values=['s3:/', bucket, ExecutionVariables.PIPELINE_EXECUTION_ID]
            ),
            content_type="text/csv")

    Attributes:
        values (List[Union[PrimitiveType, Parameter, Expression]]):
            The primitive type values, parameters, step properties, expressions to join.
        on (str): The string to join the values on (Defaults to "").
    """
    on: str = ...
    values: List = ...
    def to_string(self) -> PipelineVariable:
        """Prompt the pipeline to convert the pipeline variable to String in runtime

        As Join is treated as String in runtime, no extra actions are needed.
        """
        ...
    
    @property
    def expr(self):
        """The expression dict for a `Join` function."""
        ...
    


@attr.s
class JsonGet(PipelineVariable):
    """Get JSON properties from PropertyFiles.

    Attributes:
        step_name (str): The step name from which to get the property file.
        property_file (Union[PropertyFile, str]): Either a PropertyFile instance
            or the name of a property file.
        json_path (str): The JSON path expression to the requested value.
    """
    step_name: str = ...
    property_file: Union[PropertyFile, str] = ...
    json_path: str = ...
    @property
    def expr(self):
        """The expression dict for a `JsonGet` function."""
        ...
    


