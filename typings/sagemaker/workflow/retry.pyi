"""
This type stub file was generated by pyright.
"""

import attr
from enum import Enum
from typing import List
from sagemaker.workflow.entities import DefaultEnumMeta, Entity, RequestType

"""
This type stub file was generated by pyright.
"""
DEFAULT_BACKOFF_RATE = ...
DEFAULT_INTERVAL_SECONDS = ...
MAX_ATTEMPTS_CAP = ...
MAX_EXPIRE_AFTER_MIN = ...
class StepExceptionTypeEnum(Enum, metaclass=DefaultEnumMeta):
    """Step ExceptionType enum."""
    SERVICE_FAULT = ...
    THROTTLING = ...


class SageMakerJobExceptionTypeEnum(Enum, metaclass=DefaultEnumMeta):
    """SageMaker Job ExceptionType enum."""
    INTERNAL_ERROR = ...
    CAPACITY_ERROR = ...
    RESOURCE_LIMIT = ...


@attr.s
class RetryPolicy(Entity):
    """RetryPolicy base class

    Attributes:
        backoff_rate (float): The multiplier by which the retry interval increases
            during each attempt (default: 2.0)
        interval_seconds (int): An integer that represents the number of seconds before the
            first retry attempt (default: 1)
        max_attempts (int): A positive integer that represents the maximum
            number of retry attempts. (default: None)
        expire_after_mins (int): A positive integer that represents the maximum minute
            to expire any further retry attempt (default: None)
    """
    backoff_rate: float = ...
    interval_seconds: int = ...
    max_attempts: int = ...
    expire_after_mins: int = ...
    @backoff_rate.validator
    def validate_backoff_rate(self, _, value):
        """Validate the input back off rate type"""
        ...
    
    @interval_seconds.validator
    def validate_interval_seconds(self, _, value):
        """Validate the input interval seconds"""
        ...
    
    @max_attempts.validator
    def validate_max_attempts(self, _, value):
        """Validate the input max attempts"""
        ...
    
    @expire_after_mins.validator
    def validate_expire_after_mins(self, _, value):
        """Validate expire after mins"""
        ...
    
    def to_request(self) -> RequestType:
        """Get the request structure for workflow service calls."""
        ...
    


class StepRetryPolicy(RetryPolicy):
    """RetryPolicy for a retryable step. The pipeline service will retry

        `sagemaker.workflow.retry.StepRetryExceptionTypeEnum.SERVICE_FAULT` and
        `sagemaker.workflow.retry.StepRetryExceptionTypeEnum.THROTTLING` regardless of
        pipeline step type by default. However, for step defined as retryable, you can override them
        by specifying a StepRetryPolicy.

    Attributes:
        exception_types (List[StepExceptionTypeEnum]): the exception types to match for this policy
        backoff_rate (float): The multiplier by which the retry interval increases
            during each attempt (default: 2.0)
        interval_seconds (int): An integer that represents the number of seconds before the
            first retry attempt (default: 1)
        max_attempts (int): A positive integer that represents the maximum
            number of retry attempts. (default: None)
        expire_after_mins (int): A positive integer that represents the maximum minute
            to expire any further retry attempt (default: None)
    """
    def __init__(self, exception_types: List[StepExceptionTypeEnum], backoff_rate: float = ..., interval_seconds: int = ..., max_attempts: int = ..., expire_after_mins: int = ...) -> None:
        ...
    
    def to_request(self) -> RequestType:
        """Gets the request structure for retry policy."""
        ...
    
    def __hash__(self) -> int:
        """Hash function for StepRetryPolicy types"""
        ...
    


class SageMakerJobStepRetryPolicy(RetryPolicy):
    """RetryPolicy for exception thrown by SageMaker Job.

    Attributes:
        exception_types (List[SageMakerJobExceptionTypeEnum]):
            The SageMaker exception to match for this policy. The SageMaker exceptions
            captured here are the exceptions thrown by synchronously
            creating the job. For instance the resource limit exception.
        failure_reason_types (List[SageMakerJobExceptionTypeEnum]): the SageMaker
            failure reason types to match for this policy. The failure reason type
            is presented in FailureReason field of the Describe response, it indicates
            the runtime failure reason for a job.
        backoff_rate (float): The multiplier by which the retry interval increases
            during each attempt (default: 2.0)
        interval_seconds (int): An integer that represents the number of seconds before the
            first retry attempt (default: 1)
        max_attempts (int): A positive integer that represents the maximum
            number of retry attempts. (default: None)
        expire_after_mins (int): A positive integer that represents the maximum minute
            to expire any further retry attempt (default: None)
    """
    def __init__(self, exception_types: List[SageMakerJobExceptionTypeEnum] = ..., failure_reason_types: List[SageMakerJobExceptionTypeEnum] = ..., backoff_rate: float = ..., interval_seconds: int = ..., max_attempts: int = ..., expire_after_mins: int = ...) -> None:
        ...
    
    def to_request(self) -> RequestType:
        """Gets the request structure for retry policy."""
        ...
    
    def __hash__(self) -> int:
        """Hash function for SageMakerJobStepRetryPolicy types"""
        ...
    


