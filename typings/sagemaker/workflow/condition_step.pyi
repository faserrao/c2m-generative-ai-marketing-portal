"""
This type stub file was generated by pyright.
"""

from typing import List, Optional, Union
from sagemaker.workflow.conditions import Condition
from sagemaker.workflow.step_collections import StepCollection
from sagemaker.workflow.functions import JsonGet as NewJsonGet
from sagemaker.workflow.steps import Step
from sagemaker.workflow.entities import RequestType
from sagemaker.workflow.properties import PropertyFile

"""The step definitions for workflow."""
class ConditionStep(Step):
    """Conditional step for pipelines to support conditional branching in the execution of steps."""
    def __init__(self, name: str, depends_on: Optional[List[Union[str, Step, StepCollection]]] = ..., display_name: str = ..., description: str = ..., conditions: List[Condition] = ..., if_steps: List[Union[Step, StepCollection]] = ..., else_steps: List[Union[Step, StepCollection]] = ...) -> None:
        """Construct a ConditionStep for pipelines to support conditional branching.

        If all of the conditions in the condition list evaluate to True, the `if_steps` are
        marked as ready for execution. Otherwise, the `else_steps` are marked as ready for
        execution.

        Args:
            name (str): The name of the condition step.
            depends_on (List[Union[str, Step, StepCollection]]): The list of `Step`/StepCollection`
                names or `Step` instances or `StepCollection` instances that the current `Step`
                depends on.
            display_name (str): The display name of the condition step.
            description (str): The description of the condition step.
            conditions (List[Condition]): A list of `sagemaker.workflow.conditions.Condition`
                instances.
            if_steps (List[Union[Step, StepCollection]]): A list of `sagemaker.workflow.steps.Step`
                or `sagemaker.workflow.step_collections.StepCollection` instances that are
                marked as ready for execution if the list of conditions evaluates to True.
            else_steps (List[Union[Step, StepCollection]]): A list of `sagemaker.workflow.steps.Step`
                or `sagemaker.workflow.step_collections.StepCollection` instances that are
                marked as ready for execution if the list of conditions evaluates to False.
        """
        ...
    
    @property
    def arguments(self) -> RequestType:
        """The arguments dict that is used to define the conditional branching in the pipeline."""
        ...
    
    @property
    def step_only_arguments(self):
        """Argument dict pertaining to the step only, and not the `if_steps` or `else_steps`."""
        ...
    
    @property
    def properties(self):
        """A simple Properties object with `Outcome` as the only property"""
        ...
    


class JsonGet(NewJsonGet):
    """Get JSON properties from PropertyFiles.

    Attributes:
        step (Step): The step from which to get the property file.
        property_file (Union[PropertyFile, str]): Either a PropertyFile instance
            or the name of a property file.
        json_path (str): The JSON path expression to the requested value.
    """
    def __init__(self, step: Step, property_file: Union[PropertyFile, str], json_path: str) -> None:
        ...
    


JsonGet = ...
