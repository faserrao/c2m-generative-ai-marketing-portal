"""
This type stub file was generated by pyright.
"""

"""
This type stub file was generated by pyright.
"""
class ColorWrap:
    """A callable that will print text in a different color depending on the instance.

    Up to 6 if standard output is a terminal or a Jupyter notebook cell.
    """
    _stream_colors = ...
    def __init__(self, force=...) -> None:
        """Initialize the class.

        Args:
            force (bool): If True, render colorizes output no matter where the
                output is (default: False).
        """
        ...
    
    def __call__(self, index, s):
        """Print the output, colorized or not, depending on the environment.

        Args:
            index (int): The instance number.
            s (str): The string to print.
        """
        ...
    


def argmin(arr, f):
    """Return the index, i, in arr that minimizes f(arr[i])

    Args:
        arr:
        f:
    """
    ...

def some(arr):
    """Return True iff there is an element, a, of arr such that a is not None.

    Args:
        arr:
    """
    ...

Position = ...
def multi_stream_iter(client, log_group, streams, positions=...):
    """Iterate over the available events coming from a set of log streams.

    Log streams are in a single log group interleaving the events from each stream
    so they're yielded in timestamp order.

    Args:
        client (boto3 client): The boto client for logs.
        log_group (str): The name of the log group.
        streams (list of str): A list of the log stream names. The position of the stream in
        this list is the stream number.
        positions: (list of Positions): A list of pairs of (timestamp, skip) which represents
        the last record read from each stream.

    Yields:
        A tuple of (stream number, cloudwatch log event).
    """
    ...

def log_stream(client, log_group, stream_name, start_time=..., skip=...):
    """A generator for log items in a single stream.

    This will yield all the items that are available at the current moment.

    Args:
        client (boto3.CloudWatchLogs.Client): The Boto client for CloudWatch logs.
        log_group (str): The name of the log group.
        stream_name (str): The name of the specific stream.
        start_time (int): The time stamp value to start reading the logs from (default: 0).
        skip (int): The number of log entries to skip at the start (default: 0). This is for
        when there are multiple entries at the same timestamp.

    Yields:
       dict: A CloudWatch log event with the following key-value pairs:
           'timestamp' (int): The time of the event.
           'message' (str): The log event data.
           'ingestionTime' (int): The time the event was ingested.
    """
    ...

