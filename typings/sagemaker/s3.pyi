"""
This type stub file was generated by pyright.
"""

import io
from typing import Union

"""
This type stub file was generated by pyright.
"""
logger = ...
class S3Uploader:
    """Contains static methods for uploading directories or files to S3."""
    @staticmethod
    def upload(local_path, desired_s3_uri, kms_key=..., sagemaker_session=...):
        """Static method that uploads a given file or directory to S3.

        Args:
            local_path (str): Path (absolute or relative) of local file or directory to upload.
            desired_s3_uri (str): The desired S3 location to upload to. It is the prefix to
                which the local filename will be added.
            kms_key (str): The KMS key to use to encrypt the files.
            sagemaker_session (sagemaker.session.Session): Session object which
                manages interactions with Amazon SageMaker APIs and any other
                AWS services needed. If not specified, one is created
                using the default AWS configuration chain.

        Returns:
            The S3 uri of the uploaded file(s).

        """
        ...
    
    @staticmethod
    def upload_string_as_file_body(body: str, desired_s3_uri=..., kms_key=..., sagemaker_session=...):
        """Static method that uploads a given file or directory to S3.

        Args:
            body (str): String representing the body of the file.
            desired_s3_uri (str): The desired S3 uri to upload to.
            kms_key (str): The KMS key to use to encrypt the files.
            sagemaker_session (sagemaker.session.Session): Session object which
                manages interactions with Amazon SageMaker APIs and any other
                AWS services needed. If not specified, the estimator creates one
                using the default AWS configuration chain.

        Returns:
            str: The S3 uri of the uploaded file.

        """
        ...
    
    @staticmethod
    def upload_bytes(b: Union[bytes, io.BytesIO], s3_uri, kms_key=..., sagemaker_session=...):
        """Static method that uploads a given file or directory to S3.

        Args:
            b (bytes or io.BytesIO): bytes.
            s3_uri (str): The S3 uri to upload to.
            kms_key (str): The KMS key to use to encrypt the files.
            sagemaker_session (sagemaker.session.Session): Session object which
                manages interactions with Amazon SageMaker APIs and any other
                AWS services needed. If not specified, one is created
                using the default AWS configuration chain.

        Returns:
            str: The S3 uri of the uploaded file.

        """
        ...
    


class S3Downloader:
    """Contains static methods for downloading directories or files from S3."""
    @staticmethod
    def download(s3_uri, local_path, kms_key=..., sagemaker_session=...):
        """Static method that downloads a given S3 uri to the local machine.

        Args:
            s3_uri (str): An S3 uri to download from.
            local_path (str): A local path to download the file(s) to.
            kms_key (str): The KMS key to use to decrypt the files.
            sagemaker_session (sagemaker.session.Session): Session object which
                manages interactions with Amazon SageMaker APIs and any other
                AWS services needed. If not specified, one is created
                using the default AWS configuration chain.

        Returns:
            list[str]: List of local paths of downloaded files
        """
        ...
    
    @staticmethod
    def read_file(s3_uri, sagemaker_session=...) -> str:
        """Static method that returns the contents of a s3 uri file body as a string.

        Args:
            s3_uri (str): An S3 uri that refers to a single file.
            sagemaker_session (sagemaker.session.Session): Session object which
                manages interactions with Amazon SageMaker APIs and any other
                AWS services needed. If not specified, one is created
                using the default AWS configuration chain.

        Returns:
            str: The body of the file.
        """
        ...
    
    @staticmethod
    def read_bytes(s3_uri, sagemaker_session=...) -> bytes:
        """Static method that returns the contents of a s3 object as bytes.

        Args:
            s3_uri (str): An S3 uri that refers to a s3 object.
            sagemaker_session (sagemaker.session.Session): Session object which
                manages interactions with Amazon SageMaker APIs and any other
                AWS services needed. If not specified, one is created
                using the default AWS configuration chain.

        Returns:
            bytes: The body of the file.
        """
        ...
    
    @staticmethod
    def list(s3_uri, sagemaker_session=...):
        """Static method that lists the contents of an S3 uri.

        Args:
            s3_uri (str): The S3 base uri to list objects in.
            sagemaker_session (sagemaker.session.Session): Session object which
                manages interactions with Amazon SageMaker APIs and any other
                AWS services needed. If not specified, one is created
                using the default AWS configuration chain.

        Returns:
            [str]: The list of S3 URIs in the given S3 base uri.
        """
        ...
    


