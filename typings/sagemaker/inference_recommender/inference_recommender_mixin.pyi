"""
This type stub file was generated by pyright.
"""

from typing import Dict, List, Optional
from sagemaker.parameter import CategoricalParameter

"""
This type stub file was generated by pyright.
"""
INFERENCE_RECOMMENDER_FRAMEWORK_MAPPING = ...
LOGGER = ...
class Phase:
    """Used to store phases of a traffic pattern to perform endpoint load testing.

    Required for an Advanced Inference Recommendations Job
    """
    def __init__(self, duration_in_seconds: int, initial_number_of_users: int, spawn_rate: int) -> None:
        """Initialize a `Phase`"""
        ...
    


class ModelLatencyThreshold:
    """Used to store inference request/response latency to perform endpoint load testing.

    Required for an Advanced Inference Recommendations Job
    """
    def __init__(self, percentile: str, value_in_milliseconds: int) -> None:
        """Initialize a `ModelLatencyThreshold`"""
        ...
    


class InferenceRecommenderMixin:
    """A mixin class for SageMaker ``Inference Recommender`` that will be extended by ``Model``"""
    def right_size(self, sample_payload_url: str = ..., supported_content_types: List[str] = ..., supported_instance_types: List[str] = ..., job_name: str = ..., framework: str = ..., job_duration_in_seconds: int = ..., hyperparameter_ranges: List[Dict[str, CategoricalParameter]] = ..., phases: List[Phase] = ..., traffic_type: str = ..., max_invocations: int = ..., model_latency_thresholds: List[ModelLatencyThreshold] = ..., max_tests: int = ..., max_parallel_tests: int = ..., log_level: Optional[str] = ...):
        """Recommends an instance type for a SageMaker or BYOC model.

        Create a SageMaker ``Model`` or use a registered ``ModelPackage``,
        to start an Inference Recommender job.

        The name of the created model is accessible in the ``name`` field of
        this ``Model`` after right_size returns.

        Args:
            sample_payload_url (str): The S3 path where the sample payload is stored.
            supported_content_types: (list[str]): The supported MIME types for the input data.
            supported_instance_types (list[str]): A list of the instance types that this model
                is expected to work on. (default: None).
            job_name (str): The name of the Inference Recommendations Job. (default: None).
            framework (str): The machine learning framework of the Image URI.
                Only required to specify if you bring your own custom containers (default: None).
            job_duration_in_seconds (int): The maximum job duration that a job can run for.
                (default: None).
            hyperparameter_ranges (list[Dict[str, sagemaker.parameter.CategoricalParameter]]):
                Specifies the hyper parameters to be used during endpoint load tests.
                `instance_type` must be specified as a hyperparameter range.
                `env_vars` can be specified as an optional hyperparameter range. (default: None).
                Example::

                    hyperparameter_ranges = [{
                        'instance_types': CategoricalParameter(['ml.c5.xlarge', 'ml.c5.2xlarge']),
                        'OMP_NUM_THREADS': CategoricalParameter(['1', '2', '3', '4'])
                    }]

            phases (list[Phase]): Shape of the traffic pattern to use in the load test
                (default: None).
            traffic_type (str): Specifies the traffic pattern type. Currently only supports
                one type 'PHASES' (default: None).
            max_invocations (str): defines the minimum invocations per minute for the endpoint
                to support (default: None).
            model_latency_thresholds (list[ModelLatencyThreshold]): defines the maximum response
                latency for endpoints to support (default: None).
            max_tests (int): restricts how many endpoints in total are allowed to be
                spun up for this job (default: None).
            max_parallel_tests (int): restricts how many concurrent endpoints
                this job is allowed to spin up (default: None).
            log_level (str): specifies the inline output when waiting for right_size to complete
                (default: "Verbose").

        Returns:
            sagemaker.model.Model: A SageMaker ``Model`` object. See
            :func:`~sagemaker.model.Model` for full details.
        """
        ...
    


