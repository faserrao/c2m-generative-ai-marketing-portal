"""
This type stub file was generated by pyright.
"""

"""
This type stub file was generated by pyright.
"""
class CandidateEstimator:
    """A class for SageMaker AutoML Job Candidate"""
    def __init__(self, candidate, sagemaker_session=...) -> None:
        """Constructor of CandidateEstimator.

        Args:
            candidate (dict): a dictionary of candidate returned by AutoML.list_candidates()
                or AutoML.best_candidate().
            sagemaker_session (sagemaker.session.Session): A SageMaker Session
                object, used for SageMaker interactions (default: None). If not
                specified, one is created using the default AWS configuration
                chain.
        """
        ...
    
    def get_steps(self):
        """Get the step job of a candidate so that users can construct estimators/transformers

        Returns:
            list: a list of dictionaries that provide information about each step job's name,
                type, inputs and description
        """
        ...
    
    def fit(self, inputs, candidate_name=..., volume_kms_key=..., encrypt_inter_container_traffic=..., vpc_config=..., wait=..., logs=...):
        """Rerun a candidate's step jobs with new input datasets or security config.

        Args:
            inputs (str or list[str]): Local path or S3 Uri where the training data is stored. If a
                local path is provided, the dataset will be uploaded to an S3 location.
            candidate_name (str): name of the candidate to be rerun, if None, candidate's original
                name will be used.
            volume_kms_key (str): The KMS key id to encrypt data on the storage volume attached to
                the ML compute instance(s).
            encrypt_inter_container_traffic (bool): To encrypt all communications between ML compute
                instances in distributed training. If not passed, will be fetched from
                sagemaker_config if a value is defined there. Default: False.
            vpc_config (dict): Specifies a VPC that jobs and hosted models have access to.
                Control access to and from training and model containers by configuring the VPC
            wait (bool): Whether the call should wait until all jobs completes (default: True).
            logs (bool): Whether to show the logs produced by the job.
                Only meaningful when wait is True (default: True).
        """
        ...
    


class CandidateStep:
    """A class that maintains an AutoML Candidate step's name, inputs, type, and description."""
    def __init__(self, name, inputs, step_type, description) -> None:
        ...
    
    @property
    def name(self):
        """Name of the candidate step -> (str)"""
        ...
    
    @property
    def inputs(self):
        """Inputs of the candidate step -> (dict)"""
        ...
    
    @property
    def type(self):
        """Type of the candidate step, Training or Transform -> (str)"""
        ...
    
    @property
    def description(self):
        """Description of candidate step job -> (dict)"""
        ...
    


