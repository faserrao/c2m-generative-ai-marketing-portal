"""
This type stub file was generated by pyright.
"""

import datetime
import boto3
import botocore
from typing import List, Optional
from sagemaker.jumpstart.types import JumpStartModelHeader, JumpStartModelSpecs

"""This module defines the JumpStartModelsCache class."""
class JumpStartModelsCache:
    """Class that implements a cache for JumpStart models manifests and specs.

    The manifest and specs associated with JumpStart models provide the information necessary
    for launching JumpStart models from the SageMaker SDK.
    """
    def __init__(self, region: str = ..., max_s3_cache_items: int = ..., s3_cache_expiration_horizon: datetime.timedelta = ..., max_semantic_version_cache_items: int = ..., semantic_version_cache_expiration_horizon: datetime.timedelta = ..., manifest_file_s3_key: str = ..., s3_bucket_name: Optional[str] = ..., s3_client_config: Optional[botocore.config.Config] = ..., s3_client: Optional[boto3.client] = ...) -> None:
        """Initialize a ``JumpStartModelsCache`` instance.

        Args:
            region (str): AWS region to associate with cache. Default: region associated
                with boto3 session.
            max_s3_cache_items (int): Maximum number of items to store in s3 cache.
                Default: 20.
            s3_cache_expiration_horizon (datetime.timedelta): Maximum time to hold
                items in s3 cache before invalidation. Default: 6 hours.
            max_semantic_version_cache_items (int): Maximum number of items to store in
                semantic version cache. Default: 20.
            semantic_version_cache_expiration_horizon (datetime.timedelta):
                Maximum time to hold items in semantic version cache before invalidation.
                Default: 6 hours.
            manifest_file_s3_key (str): The key in S3 corresponding to the sdk metadata manifest.
            s3_bucket_name (Optional[str]): S3 bucket to associate with cache.
                Default: JumpStart-hosted content bucket for region.
            s3_client_config (Optional[botocore.config.Config]): s3 client config to use for cache.
                Default: None (no config).
            s3_client (Optional[boto3.client]): s3 client to use. Default: None.
        """
        ...
    
    def set_region(self, region: str) -> None:
        """Set region for cache. Clears cache after new region is set."""
        ...
    
    def get_region(self) -> str:
        """Return region for cache."""
        ...
    
    def set_manifest_file_s3_key(self, key: str) -> None:
        """Set manifest file s3 key. Clears cache after new key is set."""
        ...
    
    def get_manifest_file_s3_key(self) -> str:
        """Return manifest file s3 key for cache."""
        ...
    
    def set_s3_bucket_name(self, s3_bucket_name: str) -> None:
        """Set s3 bucket used for cache."""
        ...
    
    def get_bucket(self) -> str:
        """Return bucket used for cache."""
        ...
    
    def get_manifest(self) -> List[JumpStartModelHeader]:
        """Return entire JumpStart models manifest."""
        ...
    
    def get_header(self, model_id: str, semantic_version_str: str) -> JumpStartModelHeader:
        """Return header for a given JumpStart model ID and semantic version.

        Args:
            model_id (str): model ID for which to get a header.
            semantic_version_str (str): The semantic version for which to get a
                header.
        """
        ...
    
    def get_specs(self, model_id: str, semantic_version_str: str) -> JumpStartModelSpecs:
        """Return specs for a given JumpStart model ID and semantic version.

        Args:
            model_id (str): model ID for which to get specs.
            semantic_version_str (str): The semantic version for which to get
                specs.
        """
        ...
    
    def clear(self) -> None:
        """Clears the model ID/version and s3 cache."""
        ...
    


