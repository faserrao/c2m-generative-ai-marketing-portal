"""
This type stub file was generated by pyright.
"""

"""
This type stub file was generated by pyright.
"""
class UnexpectedStatusException(ValueError):
    """Raised when resource status is not expected and thus not allowed for further execution"""
    def __init__(self, message, allowed_statuses, actual_status) -> None:
        ...
    


class CapacityError(UnexpectedStatusException):
    """Raised when resource status is not expected and fails with a reason of CapacityError"""
    ...


class AsyncInferenceError(Exception):
    """The base exception class for Async Inference exceptions."""
    fmt = ...
    def __init__(self, **kwargs) -> None:
        ...
    


class ObjectNotExistedError(AsyncInferenceError):
    """Raised when Amazon S3 object not exist in the given path"""
    fmt = ...
    def __init__(self, message, output_path) -> None:
        ...
    


class PollingTimeoutError(AsyncInferenceError):
    """Raised when wait longer than expected and no result object in Amazon S3 bucket yet"""
    fmt = ...
    def __init__(self, message, output_path, seconds) -> None:
        ...
    


class UnexpectedClientError(AsyncInferenceError):
    """Raised when ClientError's error code is not expected"""
    fmt = ...
    def __init__(self, message) -> None:
        ...
    


class AutoMLStepInvalidModeError(Exception):
    """Raised when the automl mode passed into AutoMLStep in invalid"""
    fmt = ...
    def __init__(self, **kwargs) -> None:
        ...
    


class AsyncInferenceModelError(AsyncInferenceError):
    """Raised when model returns errors for failed requests"""
    fmt = ...
    def __init__(self, message) -> None:
        ...
    


