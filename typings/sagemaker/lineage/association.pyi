"""
This type stub file was generated by pyright.
"""

from typing import Iterator, Optional
from datetime import datetime
from sagemaker.apiutils import _base_types
from sagemaker.lineage._api_types import AssociationSummary

"""This module contains code to create and manage SageMaker ``Artifact``."""
logger = ...
class Association(_base_types.Record):
    """An Amazon SageMaker artifact, which is part of a SageMaker lineage.

    Examples:
        .. code-block:: python

            from sagemaker.lineage import association

            my_association = association.Association.create(
                source_arn=artifact_arn,
                destination_arn=trial_component_arn,
                association_type='ContributedTo')

            for assoctn in association.Association.list():
                print(assoctn)

            my_association.delete()

    Attributes:
        source_arn (str): The ARN of the source entity.
        source_type (str): The type of the source entity.
        destination_arn (str): The ARN of the destination entity.
        destination_type (str): The type of the destination entity.
        association_type (str): the type of the association.
    """
    source_arn: str = ...
    destination_arn: str = ...
    _boto_create_method: str = ...
    _boto_delete_method: str = ...
    _custom_boto_types: dict = ...
    _boto_delete_members = ...
    def delete(self):
        """Delete this Association from SageMaker."""
        ...
    
    def set_tag(self, tag=...):
        """Add a tag to the object.

        Args:
            tag (obj): Key value pair to set tag.

        Returns:
            list({str:str}): a list of key value pairs
        """
        ...
    
    def set_tags(self, tags=...):
        """Add tags to the object.

        Args:
            tags ([{key:value}]): list of key value pairs.

        Returns:
            list({str:str}): a list of key value pairs
        """
        ...
    
    @classmethod
    def create(cls, source_arn: str, destination_arn: str, association_type: str = ..., sagemaker_session=...) -> Association:
        """Add an association and return an ``Association`` object representing it.

        Args:
            source_arn (str): The ARN of the source.
            destination_arn (str): The ARN of the destination.
            association_type (str): The type of the association. ContributedTo, AssociatedWith,
                DerivedFrom, or Produced.
            sagemaker_session (sagemaker.session.Session): Session object which
                manages interactions with Amazon SageMaker APIs and any other
                AWS services needed. If not specified, one is created using the
                default AWS configuration chain.

        Returns:
            association: A SageMaker ``Association`` object.
        """
        ...
    
    @classmethod
    def list(cls, source_arn: str = ..., destination_arn: str = ..., source_type: str = ..., destination_type: str = ..., association_type: str = ..., created_after: Optional[datetime] = ..., created_before: Optional[datetime] = ..., sort_by: Optional[str] = ..., sort_order: Optional[str] = ..., max_results: Optional[int] = ..., next_token: Optional[str] = ..., sagemaker_session=...) -> Iterator[AssociationSummary]:
        """Return a list of context summaries.

        Args:
            source_arn (str): The ARN of the source entity.
            destination_arn (str): The ARN of the destination entity.
            source_type (str): The type of the source entity.
            destination_type (str): The type of the destination entity.
            association_type (str): The type of the association.
            created_after (datetime.datetime, optional): Return contexts created after this
                instant.
            created_before (datetime.datetime, optional): Return contexts created before this
                instant.
            sort_by (str, optional): Which property to sort results by.
                One of 'SourceArn', 'CreatedBefore', 'CreatedAfter'
            sort_order (str, optional): One of 'Ascending', or 'Descending'.
            max_results (int, optional): maximum number of contexts to retrieve
            next_token (str, optional): token for next page of results
            sagemaker_session (sagemaker.session.Session): Session object which
                manages interactions with Amazon SageMaker APIs and any other
                AWS services needed. If not specified, one is created using the
                default AWS configuration chain.

        Returns:
            collections.Iterator[AssociationSummary]: An iterator
                over ``AssociationSummary`` objects.
        """
        ...
    


