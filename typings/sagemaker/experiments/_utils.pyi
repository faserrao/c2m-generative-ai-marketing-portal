"""
This type stub file was generated by pyright.
"""

from typing import Optional
from sagemaker import Session
from sagemaker.experiments._environment import _RunEnvironment

"""
This type stub file was generated by pyright.
"""
def resolve_artifact_name(file_path):
    """Resolve artifact name from given file path.

    If not specified, will auto create one.

    Args:
        file_path (str): Path to the file.

    Returns:
        str: The resolved artifact name.
    """
    ...

def guess_media_type(file_path):
    """Infer the media type of a file based on its file name.

    Args:
        file_path (str): Path to the file.

    Returns:
        str: The guessed media type.
    """
    ...

def verify_length_of_true_and_predicted(true_labels, predicted_attrs, predicted_attrs_name):
    """Verify if lengths match between lists of true labels and predicted attributes.

    Args:
        true_labels (list or array): The list of the true labels.
        predicted_attrs (list or array): The list of the predicted labels/probabilities/scores.
        predicted_attrs_name (str): The name of the predicted attributes.

    Raises:
        ValueError: If lengths mismatch between true labels and predicted attributes.
    """
    ...

def validate_invoked_inside_run_context(func):
    """A Decorator to force the decorated method called under Run context."""
    ...

def is_already_exist_error(error):
    """Check if the error indicates resource already exists

    Args:
        error (dict): The "Error" field in the response of the
            `botocore.exceptions.ClientError`
    """
    ...

def get_tc_and_exp_config_from_job_env(environment: _RunEnvironment, sagemaker_session: Session) -> dict:
    """Retrieve an experiment config from the job environment.

    Args:
        environment (_RunEnvironment): The run environment object with job specific data.
        sagemaker_session (sagemaker.session.Session): Session object which
            manages interactions with Amazon SageMaker APIs and any other
            AWS services needed. If not specified, one is created using the
            default AWS configuration chain.
    """
    ...

def verify_load_input_names(run_name: Optional[str] = ..., experiment_name: Optional[str] = ...):
    """Verify the run_name and the experiment_name inputs in load_run.

    Args:
        run_name (str): The run_name supplied by the user (default: None).
        experiment_name (str): The experiment_name supplied by the user
            (default: None).

    Raises:
        ValueError: If run_name is supplied while experiment_name is not.
    """
    ...

def is_run_trial_component(trial_component_name: str, sagemaker_session: Session) -> bool:
    """Check if a trial component is generated by `sagemaker.experiments.Run`

    Args:
        trial_component_name (str): The name of the trial component.
        sagemaker_session (sagemaker.session.Session): Session object which
            manages interactions with Amazon SageMaker APIs and any other
            AWS services needed. If not specified, one is created using the
            default AWS configuration chain.

    Returns:
        bool: Indicate whether the trial component is created by
            `sagemaker.experiments.Run` or not.
    """
    ...

