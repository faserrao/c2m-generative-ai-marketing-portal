"""
This type stub file was generated by pyright.
"""

from sagemaker.apiutils import _base_types

"""
This type stub file was generated by pyright.
"""
class Experiment(_base_types.Record):
    """An Amazon SageMaker experiment, which is a collection of related trials.

    New experiments are created by calling `experiments.experiment.Experiment.create`.
    Existing experiments can be reloaded by calling `experiments.experiment.Experiment.load`.

    Attributes:
        experiment_name (str): The name of the experiment. The name must be unique
            within an account.
        display_name (str): Name of the experiment that will appear in UI,
            such as SageMaker Studio.
        description (str): A description of the experiment.
        tags (List[Dict[str, str]]): A list of tags to associate with the experiment.
    """
    experiment_name = ...
    display_name = ...
    description = ...
    tags = ...
    _boto_create_method = ...
    _boto_load_method = ...
    _boto_update_method = ...
    _boto_delete_method = ...
    _boto_update_members = ...
    _boto_delete_members = ...
    _MAX_DELETE_ALL_ATTEMPTS = ...
    def save(self):
        """Save the state of this Experiment to SageMaker.

        Returns:
            dict: Update experiment API response.
        """
        ...
    
    def delete(self):
        """Delete this Experiment from SageMaker.

        Deleting an Experiment does not delete associated Trials and their Trial Components.
        It requires that each Trial in the Experiment is first deleted.

        Returns:
            dict: Delete experiment API response.
        """
        ...
    
    @classmethod
    def load(cls, experiment_name, sagemaker_session=...):
        """Load an existing experiment and return an `Experiment` object representing it.

        Args:
            experiment_name: (str): Name of the experiment
            sagemaker_session (sagemaker.session.Session): Session object which
                manages interactions with Amazon SageMaker APIs and any other
                AWS services needed. If not specified, one is created using the
                default AWS configuration chain.

        Returns:
            experiments.experiment.Experiment: A SageMaker `Experiment` object
        """
        ...
    
    @classmethod
    def create(cls, experiment_name, display_name=..., description=..., tags=..., sagemaker_session=...):
        """Create a new experiment in SageMaker and return an `Experiment` object.

        Args:
            experiment_name: (str): Name of the experiment. Must be unique. Required.
            display_name: (str): Name of the experiment that will appear in UI,
                such as SageMaker Studio (default: None).
            description: (str): Description of the experiment (default: None).
            sagemaker_session (sagemaker.session.Session): Session object which
                manages interactions with Amazon SageMaker APIs and any other
                AWS services needed. If not specified, one is created using the
                default AWS configuration chain.
            tags (List[Dict[str, str]]): A list of tags to associate with the experiment
                (default: None).

        Returns:
            experiments.experiment.Experiment: A SageMaker `Experiment` object
        """
        ...
    
    def list_trials(self, created_before=..., created_after=..., sort_by=..., sort_order=...):
        """List trials in this experiment matching the specified criteria.

        Args:
            created_before (datetime.datetime): Return trials created before this instant
                (default: None).
            created_after (datetime.datetime): Return trials created after this instant
                (default: None).
            sort_by (str): Which property to sort results by. One of 'Name', 'CreationTime'
                (default: None).
            sort_order (str): One of 'Ascending', or 'Descending' (default: None).

        Returns:
            collections.Iterator[experiments._api_types.TrialSummary] :
                An iterator over trials matching the criteria.
        """
        ...
    


